/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 roomModel.glb -t
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import BakedShaderMaterial from '../shaders/baked'

type GLTFResult = GLTF & {
  nodes: {
    Cube320: THREE.Mesh
  }
  materials: {}
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes } = useGLTF('/roomIn3d/roomModel.glb') as GLTFResult

  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Cube320.geometry} position={[4.87, 3.15, -0.53]} rotation={[0, Math.PI / 2, 0]}>
        <BakedShaderMaterial />
      </mesh>
    </group>
  )
}

useGLTF.preload('/roomIn3d/roomModel.glb')
